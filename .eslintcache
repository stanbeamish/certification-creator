[{"D:\\reactProjects\\certification-creator\\src\\App.js":"1","D:\\reactProjects\\certification-creator\\src\\index.js":"2","D:\\reactProjects\\certification-creator\\src\\utils\\storage.js":"3","D:\\reactProjects\\certification-creator\\src\\theme\\useTheme.js":"4","D:\\reactProjects\\certification-creator\\src\\components\\themeSelector.js":"5","D:\\reactProjects\\certification-creator\\src\\theme\\globalStyles.js":"6","D:\\reactProjects\\certification-creator\\src\\components\\certificationForm.js":"7"},{"size":1626,"mtime":1610195556913,"results":"8","hashOfConfig":"9"},{"size":434,"mtime":1610191246912,"results":"10","hashOfConfig":"9"},{"size":386,"mtime":1610187712641,"results":"11","hashOfConfig":"9"},{"size":1028,"mtime":1610191703222,"results":"12","hashOfConfig":"9"},{"size":2894,"mtime":1610199593757,"results":"13","hashOfConfig":"9"},{"size":830,"mtime":1610188532777,"results":"14","hashOfConfig":"9"},{"size":3375,"mtime":1610198926214,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15gm8de",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},"D:\\reactProjects\\certification-creator\\src\\App.js",[],"D:\\reactProjects\\certification-creator\\src\\index.js",[],"D:\\reactProjects\\certification-creator\\src\\utils\\storage.js",[],"D:\\reactProjects\\certification-creator\\src\\theme\\useTheme.js",[],"D:\\reactProjects\\certification-creator\\src\\components\\themeSelector.js",[],"D:\\reactProjects\\certification-creator\\src\\theme\\globalStyles.js",[],"D:\\reactProjects\\certification-creator\\src\\components\\certificationForm.js",["31"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport _ from 'lodash';\r\nimport treeImage from '../tree.jpg';\r\nimport seaImage from '../sea.jpg';\r\nimport forestImage from '../forest.png';\r\nimport nightImage from '../night.jpg';\r\n\r\nconst ThemedButton = styled.button`\r\n    border: none;\r\n    border-radius: 6px;\r\n    display: inline-block;\r\n    line-height: 40px;\r\n    padding: 0 33px;  \r\n    cursor: pointer;    \r\n    transition: all 0.4s ease;\r\n    font-size: 16px;\r\n    outline: none;\r\n`;\r\n\r\nconst ThemedCard = styled.div`\r\n    border-radius: 10px;  \r\n    box-shadow: 0px 8px 20px 0px rgba(0, 0, 0, 0.15);\r\n    width: 820px;\r\n    display: table;\r\n    overflow: hidden;    \r\n`;\r\n\r\nconst ThemedCardHeading = styled.div`\r\n    display: table-cell;\r\n    width: 50%;\r\n    background-repeat: no-repeat; \r\n`;\r\n\r\n\r\nfunction getImage(name) {\r\n  var fotoUrl = treeImage;\r\n  switch (name) {\r\n    case 'Day':\r\n      fotoUrl = treeImage;\r\n      break;\r\n    case 'Night':\r\n      fotoUrl = nightImage;\r\n      break;\r\n    case 'Sea':\r\n      fotoUrl = seaImage;\r\n      break;\r\n    case 'Forest':\r\n      fotoUrl = forestImage;\r\n      break;\r\n    default:\r\n      fotoUrl = treeImage;\r\n      break;\r\n  }\r\n  return fotoUrl;\r\n}\r\n\r\nconst CertificationForm = (props) => {\r\n  var themeName = props.selectedTheme.name;\r\n  var fotoUrl = getImage(themeName);\r\n  \r\n\r\n  return (\r\n    <ThemedCard style={{\r\n      backgroundColor: `${props.selectedTheme.colors.card.background}`, \r\n      color: `${props.selectedTheme.colors.card.text}`\r\n    }}>\r\n      <ThemedCardHeading style={{\r\n        background: `url(${fotoUrl})`, \r\n        color: `${props.selectedTheme.colors.card.text}`\r\n      }} \r\n      />\r\n\r\n\r\n      <div className=\"card-body\">\r\n        <h1 className=\"title\">Zertifizierung Generator</h1>\r\n      \r\n      \r\n        <div className=\"input-group\">\r\n          <input className=\"input--style-3\" type=\"text\" placeholder=\"Vorname\" name=\"firstname\" />\r\n        </div>\r\n        \r\n        <div className=\"input-group\">\r\n          <input className=\"input--style-3\" type=\"text\" placeholder=\"Nachname\" name=\"lastname\" />\r\n        </div>\r\n\r\n        <div className=\"input-group\">\r\n          <select name=\"course\" className=\"input--style-4\">\r\n            <option className=\"select--style-1\" value=\"App-Entwicklung mit Flutter und Dart\">Entwickling mit Flutter und Dart</option>\r\n            <option className=\"select--style-1\" value=\"C#-Entwicklung Advanced Themen\">C#-Entwicklung Advanced Themen</option>\r\n            <option className=\"select--style-1\" value=\"ReactJS für C#-Entwickler\">ReactJS für C#-Developers</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"input-group\">\r\n          <input className=\"input--style-3\" type=\"text\" placeholder=\"Trainer\" name=\"trainer\" onChange={() => {}} />\r\n        </div>            \r\n        \r\n        <div className=\"input-group\">\r\n          <input className=\"input--style-4\" type=\"number\" placeholder=\"Zertifikat-ID\" name=\"receiptId\" onChange={() => {}} />\r\n        </div>\r\n\r\n        <ThemedButton \r\n          onClick={() => {}}\r\n          style={{\r\n            backgroundColor: `${props.selectedTheme.colors.button.background}`, \r\n            color: `${props.selectedTheme.colors.button.text}`\r\n          }}\r\n        >Erstellen</ThemedButton>\r\n      </div>\r\n    </ThemedCard>\r\n  );\r\n}\r\n\r\nexport default CertificationForm;",{"ruleId":"32","severity":1,"message":"33","line":3,"column":8,"nodeType":"34","messageId":"35","endLine":3,"endColumn":9},"no-unused-vars","'_' is defined but never used.","Identifier","unusedVar"]